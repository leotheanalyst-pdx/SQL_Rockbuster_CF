/* Client requests the following data, to be found using common table expressions (CTEs) */

/* Inventory team wants a list of ratings for each cateogry of film in the Rockbuster databased, 
including how many times each rating occurs
-- Intend to use this information to see if certain ratings are associated with a particular category of film
(example: are comedies PG or thrillers R?) 
-- Want a table that includes the rating, category, and count */

SELECT A.film_id,
	   A.rating,
	   C.name
FROM film A
LEFT JOIN film_category B ON A.film_id = B.film_id
LEFT JOIN category C ON B.category_id = c.category_id; -- shows list of film IDs, ratings, and film categories

-- Create CTE with the data output from above

WITH category_name_cte (film_id, rating, category_name) AS
	(SELECT A.film_id,
	   		A.rating,
	   		C.name
	FROM film A
	LEFT JOIN film_category B ON A.film_id = B.film_id
	LEFT JOIN category C ON B.category_id = C.category_id) --CTE showing list of film IDs, ratings, and categories
SELECT rating,
	   category_name,
	   COUNT(film_id) AS cnts
FROM category_name_cte
GROUP BY 1,
		 2
ORDER BY rating,
		 cnts DESC;
		 
/* Client requests to run the queries from prior script as CTEs
Subquery to CTE Part 1
 -Client request: find out the average amount paid by the top 5 customers

Subquery to CTE Part 2
	-Client request to identify how many of the top 5 customers from prior step are based within each country
	-Request 3 columns: 'country' 'all_customer_count' and 'top_customer_count'
*/

-- Part 1 average amount paid by the top 5 customers as CTE
WITH top_customer_cte (customer_id, first_name, city, country, total_amount_paid) AS
	(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
	 		SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5)
SELECT AVG(total_amount_paid)::NUMERIC(10,2) AS average
FROM top_customer_cte;

--Part 2 how many of the top 5 customers from prior step are based within each country as CTE
WITH top_5_customers_cte (customer_id, first_name, city, country, total_amount_paid) AS
	(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
	 		SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5)
SELECT D.country,
	   COUNT(DISTINCT A.customer_id) as "all_customer_count",
	   COUNT(DISTINCT top_5_customers_cte) as "top_customer_count"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
LEFT JOIN top_5_customers_cte ON A.customer_id = top_5_customers_cte.customer_id
GROUP BY D.country
ORDER BY (all_customer_count) DESC
LIMIT 5;

--Succesful CTE query with matching output to subquery from prior analysis 

/* Check costs for each CTE and query from above questions */

-- Run time for average amount paid by top customers

--Subquery cost
EXPLAIN SELECT AVG(total_amount_paid)::NUMERIC(10,2)
FROM
	(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
	 		SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5) AS average;
-- Cost aggregate 66.09...66 and run time of 51msec

--CTE cost
EXPLAIN WITH top_customer_cte (customer_id, first_name, city, country, total_amount_paid) AS
	(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
	 		SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5)
SELECT AVG(total_amount_paid)::NUMERIC(10,2) AS average
FROM top_customer_cte;

-- Cost aggregate 66.09...66 with runtime of 67 seconds (similar cost, longer run time vs. subquery)

-- Run time for number of top customers by country

-- Subquery cost
EXPLAIN SELECT D.country,
	   COUNT(DISTINCT A.customer_id) as "all_customer_count",
	   COUNT(DISTINCT top_5_customers) as "top_customer_count"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
LEFT JOIN 
(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
 			SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5) AS top_5_customers --subquery named top_5_customers for reference
		ON A.customer_id = top_5_customers.customer_id
GROUP BY D.country
ORDER BY (all_customer_count) DESC
LIMIT 5;
-- Cost aggregate is 168.27..168.28 with runtime of 67msec

--CTE cost

EXPLAIN WITH top_5_customers_cte (customer_id, first_name, city, country, total_amount_paid) AS
	(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
	 		SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5)
SELECT D.country,
	   COUNT(DISTINCT A.customer_id) as "all_customer_count",
	   COUNT(DISTINCT top_5_customers_cte) as "top_customer_count"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
LEFT JOIN top_5_customers_cte ON A.customer_id = top_5_customers_cte.customer_id
GROUP BY D.country
ORDER BY (all_customer_count) DESC
LIMIT 5;

--Cost aggregate is 168.27..168.28 with total query runtime 46msec, similar to subquery in cost but shorter runtime

--Script saved for reference, inventory list saved as CSV while CTE results not saved since they have same output as prior subquery csv files
