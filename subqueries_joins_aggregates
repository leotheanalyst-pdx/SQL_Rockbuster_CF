/* CLient requests maximum amount paid for any movie in Rockbuster database
-In addition to maximum amount paid for each film, client requests output 
to display title, rating, release year, and amount paid for each film 
-Will run subquery to produce results
*/

--
SELECT title,
		rating,
		release_year, --displays requested columns from film table
		
	(SELECT MAX(amount) --maximum amount paid for each film
	 FROM payment) AS max_amount
FROM film
ORDER BY max_amount DESC, title ASC, rating; --all films have a max-amount of 11.99

/* Client request to calculate the average spent per customer in Rockbuster database
-Goal to find out which customers are spending more than the average amount and explore other analysis
-Writing as subquery so that if live database, no need to rewrite the query
--Will filter to show which movies with a value lower than the average payment amount
*/

SELECT title,
		rating,
		release_year,
		rental_rate   --Columns requested to be displayed in output
FROM film
WHERE rental_rate < 
	(SELECT AVG(amount) --will maintain accurate average payment for all clients
	 FROM payment)
ORDER BY rental_rate ASC, title ASC, rating;

--Note all films that are 0.99 or 2.99 fall under the average paid

/* Film length and rating based on limiting children's screen time
--Client request: How many films are rated G, PG, or PG-13 
--How many films are less than 100-minutes long, grouped by rating
*/

SELECT COUNT(shortmovies.film_id) AS short_movie_count,
		shortmovies.rating
FROM
	(SELECT film.film_id,
			film.rating
	 FROM film
	 WHERE film.length <=100) AS shortmovies --subquery renamed shortmovies
WHERE shortmovies.rating IN ('G', 'PG', 'PG-13')
GROUP BY shortmovies.rating
ORDER BY rating;

/* Client request: find out the average amount paid by the top 5 customers
-- Using output produce by prior step that found the top 5 customers 
*/

SELECT AVG(total_amount_paid)::NUMERIC(10,2)
FROM
	(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
	 		SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5) AS average;

		
-- For purpose of analysis, compare to overall average paid by all customers

SELECT  AVG(amount)::NUMERIC(10,2) AS "all_cust_total_amount_paid" 
FROM payment A
INNER JOIN customer B ON A.customer_id = B.customer_id
INNER JOIN address C ON B.address_id = C.address_id
INNER JOIN city D ON C.city_id = D.city_id
INNER JOIN country E ON D.country_id = E.country_id;

-- Average amount paid by top 5 customers is 105.55, average amount paid by all customers is 4.20

--Another way to find average amount paid by top 5 customers using the WHERE clause instead of HAVING
SELECT AVG (total_amount_paid) AS "average"
FROM
	(SELECT A. customer_id, 
			A. first_name AS "customer first name", 
			A. last_name AS "customer last name",
			D. country,
 			C. city,
 			SUM(E. amount) AS "total_amount_paid"
	FROM customer A
	INNER JOIN address B ON A.address_id = B.address_id
	INNER JOIN city C ON B.city_id = C.city_id
	INNER JOIN country D ON C.country_id = D.country_id
	INNER JOIN payment E on A.customer_id = E.customer_id
	WHERE city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 'Shanwei', 'So Leopoldo',
					'Teboksary', 'Tianjin', 'Cianjar')
	GROUP BY A. customer_id, first_name, last_name, city, country
	ORDER BY total_amount_paid DESC
	LIMIT 5) AS total_amount_paid;

/* Client request to identify how many of the top 5 customers from prior step are based within each country
-Request 3 columns: 'country' 'all_customer_count' and 'top_customer_count' */

SELECT D.country,
	   COUNT(DISTINCT A.customer_id) as "all_customer_count",
	   COUNT(DISTINCT top_5_customers) as "top_customer_count"
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
LEFT JOIN 
(SELECT B.customer_id,
			B.first_name, --ommitting last name to protect PII
			D.city,
			E.country,
 			SUM(A. amount) AS "total_amount_paid"
		FROM payment A
		INNER JOIN customer B ON A.customer_id = B.customer_id
		INNER JOIN address C ON B.address_id = C.address_id
		INNER JOIN city D ON C.city_id = D.city_id
		INNER JOIN country E ON D.country_id = E.country_id
	    GROUP BY B.customer_id, B.first_name, D.city, E.country
		HAVING city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Ambattur', 
						'Shanwei', 'So Leopoldo', 'Teboksary', 'Tianjin', 'Cianjur') --used results from prior query that found top 10 cities within top 10 countries
	    ORDER BY "total_amount_paid" DESC --This subquery based on identifying the top 5 customers from prior client request
		LIMIT 5) AS top_5_customers --subquery named top_5_customers for reference
		ON A.customer_id = top_5_customers.customer_id
GROUP BY D.country
ORDER BY (all_customer_count) DESC
LIMIT 5;

--All results saved as csv files and uploaded to excel document
